{"version":3,"sources":["utils/queries.js","utils/mutations.js","utils/auth.js","Register.js","Login.js","components/Envcard.js","components/Homepage.js","components/Footer.js","App.js","index.js"],"names":["QUERY_ENVELOPES","gql","LOGIN_USER","ADD_USER","decode","this","getToken","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","reload","Register","useState","name","email","password","formState","setFormState","useMutation","addUser","error","data","handleChange","event","target","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","login","token","className","to","onSubmit","placeholder","type","onChange","style","cursor","message","Login","props","Envcard","isModalVisible","setIsModalVisible","handleCancel","title","bordered","flex","backgroundColor","width","opacity","overflow","balance","onClick","margin","visible","onCancel","footer","Sider","Layout","Content","HomePage","useQuery","envelope","envelopes","envelopeName","setEnvelopeName","envelopeBalance","setEnvelopeBalance","loggedIn","minHeight","textAlign","marginLeft","breakpoint","collapsedWidth","theme","map","env","key","Item","e","envBalance","block","exact","path","Footer1","Header","Footer","App","mode","logout","Homepage","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a235f89c.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\n//query all users\nexport const QUERY_USERS = gql`\n  query allUsers {\n    users {\n      _id\n      name\n      email\n      password\n      envelopes {\n        _id\n        name\n        envBalance\n        transactions {\n          name\n          amount\n          type\n        }\n      }\n    }\n  }\n`;\n\n//query a single user\nexport const QUERY_SINGLE_USER = gql`\n  query singleUser($userId: ID!) {\n    user(userId: $userId) {\n      _id\n      name\n      email\n      password\n      envelopes {\n        _id\n        name\n        envBalance\n        transactions {\n          name\n          amount\n          type\n        }\n      }\n    }\n  }\n`;\n\n//query all envelopes\nexport const QUERY_ENVELOPES = gql`\n  query allEnvelopes {\n    envelopes {\n      _id\n      name\n      envBalance\n      transactions {\n        name\n        amount\n        type\n      }\n    }\n  }\n`;\n\n//query a single envelope\nexport const QUERY_SINGLE_ENVELOPE = gql`\n  query singleEnvelope($envelopeId: ID!) {\n    envelope(envelopeId: $envelopeId) {\n      _id\n      name\n      envBalance\n      transactions {\n        name\n        amount\n        type\n      }\n    }\n  }\n`;\n\n//query all accounts\nexport const QUERY_ACCOUNTS = gql`\n  query allAccounts {\n    accounts {\n      _id\n      name\n      type\n      accountBalance\n      transactions {\n        name\n        amount\n        type\n      }\n    }\n  }\n`;\n\n//query a single account\nexport const QUERY_SINGLE_ACCOUNT = gql`\n  query singleAccount($accountId: ID!) {\n    transaction(accountId: $accountId) {\n      _id\n      name\n      type\n      accountBalance\n      transactions {\n        name\n        amount\n        type\n      }\n    }\n  }\n`;\n\n// export const QUERY_TRANSACTIONS = gql`\n//   query allTransactions {\n//     transactions {\n//       _id\n//       transAmount\n//       deposit\n//     }\n//   }\n// `;\n\n// export const QUERY_SINGLE_TRANSACTION = gql`\n//   query singleTransaction($transId: ID!) {\n//     transaction(transId: $transId) {\n//       _id\n//       transAmount\n//       deposit\n//     }\n//   }\n// `;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n\n//add a user\nexport const ADD_USER = gql`\n  mutation addUser($name: String!, $email: String!, $password: String!) {\n    addUser(name: $name, email: $email, password: $password) {\n      user {\n        _id\n        name\n        password\n      }\n    }\n  }\n`;\n\n//remove a user\nexport const REMOVE_USER = gql`\n  mutation removeUser($userId: ID!) {\n    removeUser(userId: $userId)\n  }\n`;\n\n//add an envelope\nexport const ADD_ENVELOPE = gql`\n  mutation addEnvelope($userId: ID, $name: String!, $envBalance: Float!) {\n    addEnvelope(userId: $userId, name: $name, envBalance: $envBalance) {\n      _id\n      name\n      envBalance\n    }\n  }\n`;\n\n//remove an envelope\nexport const REMOVE_ENVELOPE = gql`\n  mutation removeEnvelope($envelopeId: ID!) {\n    removeEnvelope(envelopeId: $envelopeId)\n  }\n`;\n\n//add an account transaction\nexport const ADD_ACCOUNT_TRANSACTION = gql`\n  mutation addAccountTransaction(\n    $accountId: ID!\n    $name: String!\n    $amount: Float!\n    $type: Boolean!\n  ) {\n    addAccountTransaction(\n      accountId: $accountId\n      name: $name\n      amount: $amount\n      type: $type\n    ) {\n      transactions {\n        amount\n        name\n        type\n      }\n    }\n  }\n`;\n\n//add an envelope transaction\nexport const ADD_ENVELOPE_TRANSACTION = gql`\n  mutation addEnvelopeTransaction(\n    $envelopeId: ID!\n    $name: String!\n    $amount: Float!\n    $type: Boolean!\n  ) {\n    addEnvelopeTransaction(\n      accountId: $accountId\n      name: $name\n      amount: $amount\n      type: $type\n    ) {\n      transactions {\n        amount\n        name\n        type\n      }\n    }\n  }\n`;\n\n//remove an envelope transaction\n\n//add an account\nexport const ADD_ACCOUNT = gql`\n  mutation addAccount(\n    $name: String!\n    $type: Boolean!\n    $accountBalance: Float!\n  ) {\n    addAccount(name: $name, type: $type, accountBalance: $accountBalance) {\n      accountId\n      name\n      type\n      accountBalance\n    }\n  }\n`;\n\n//remove an account\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getUser() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"./utils/mutations\";\n\nimport Auth from \"./utils/auth\";\n\nconst Register = () => {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{\" \"}\n                <Link to=\"/homepage\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your Name\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"./utils/mutations\";\n\nimport Auth from \"./utils/auth\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n      console.log(data);\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(\"login error\");\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <>\n                <Link to=\"/\">back to the homepage.</Link>\n              </>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Card, Modal, Button, Input } from \"antd\";\n\nimport \"antd/dist/antd.css\";\n\nexport default function Envcard(props) {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const removeEnv = () => {};\n  const handleDeposit = () => {\n    setIsModalVisible(false);\n  };\n  const handleWithdrawal = () => {\n    setIsModalVisible(false);\n  };\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const cardStyle = {\n    width: \"400px\",\n    padding: \"100px\",\n    border: \"blue solid 3px\",\n    borderRadius: \"5px\",\n    backgroundColor: \"#001529\",\n  };\n  const nameStyle = {\n    color: \"#001529\",\n    fontWeight: \"bold\",\n    border: \"blue solid 2px\",\n    textAlign: \"center\",\n    borderRadius: \"5px\",\n    boxShadow: \"3px 3px\",\n    backgroundColor: \"white\",\n    fontSize: \"30px\",\n  };\n  const balanceStyle = {\n    color: \"blue\",\n    fontSize: \"30px\",\n    textAlign: \"center\",\n    borderBottom: \"none\",\n  };\n  const balAmtStyle = {\n    color: \"white\",\n    fontSize: \"30px\",\n    textAlign: \"center\",\n  };\n  const styles = {\n    container: {\n      flex: 1,\n      backgroundColor: \"white\",\n      width: \"400px\",\n      opacity: \"80%\",\n      overflow: \"inherit\",\n    },\n  };\n  return (\n    // <div>\n    //   <div className=\"card\">\n    //     <div className=\"card-body\" style={cardStyle}>\n    //       <h5 className=\"card-title\" style={nameStyle}>\n    //         {props.name}\n    //       </h5>\n    //       <p className=\"card-text\" style={balanceStyle}>\n    //         Balance:{\" \"}\n    //       </p>\n    //       <p className=\"card-text\" style={balAmtStyle}>\n    //         ${props.balance}.00\n    //       </p>\n    //     </div>\n    //   </div>\n    // </div>\n    <>\n      {/* <p>{props.name}</p>\n      <p>{props.envBalance}</p> */}\n      <div className=\"cardWrapper\">\n        <Card title={props.name} bordered={false} style={styles.container}>\n          <p>$ {props.balance} </p>\n          <Button type=\"primary\" onClick={showModal} style={{ margin: \"10px\" }}>\n            Add Transaction\n          </Button>\n          {/* <Button type=\"primary\" onClick={removeEnv} style={{ margin: \"10px\" }}>\n            Remove Envelope\n          </Button> */}\n          {/* {MODAL  NEED TO ADD FUNCTIONALITY TO DEPOSIT AND WITHDRAWAL} */}\n          <Modal\n            title=\"Transaction\"\n            visible={isModalVisible}\n            onCancel={handleCancel}\n            footer={[\n              <Button key=\"back\" onClick={handleCancel}>\n                Return\n              </Button>,\n              <Button\n                key=\"1\"\n                type=\"primary\"\n                value=\"small\"\n                onClick={handleDeposit}\n              >\n                Deposit\n              </Button>,\n              <Button\n                key=\"2\"\n                type=\"primary\"\n                value=\"small\"\n                onClick={handleWithdrawal}\n              >\n                Withdrawal\n              </Button>,\n            ]}\n          >\n            <Input placeholder=\"Transaction Amount\" />\n          </Modal>\n        </Card>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Route, Link, withRouter } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ENVELOPES } from \"../utils/queries\";\nimport Register from \"../Register\";\nimport Login from \"../Login\";\nimport Envcard from \"./Envcard\";\nimport \"antd/dist/antd.css\";\nimport Auth from \"../utils/auth\";\n\nimport { Layout, Menu, Button } from \"antd\";\nconst { Sider, Content } = Layout;\n\nfunction HomePage() {\n  const { data } = useQuery(QUERY_ENVELOPES);\n  const envelope = data?.envelopes || [];\n  console.log(envelope);\n\n  const [envelopeName, setEnvelopeName] = useState(\"\");\n  const [envelopeBalance, setEnvelopeBalance] = useState(\"\");\n\n  const handleFormSubmit = (e) => () => {\n    setEnvelopeName(e.name);\n    setEnvelopeBalance(e.envBalance);\n  };\n\n  return (\n    <>\n      {Auth.loggedIn() ? (\n        <>\n          <Sider\n            className=\"sider\"\n            style={{\n              minHeight: \"80vh\",\n              textAlign: \"center\",\n              marginLeft: \"10px\",\n            }}\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n          >\n            <Menu className=\"sideMenu\" theme=\"dark\">\n              {envelope.map(\n                (env, key) => (\n                  (key = { key }),\n                  (\n                    <Menu.Item\n                      className=\"sideButtons\"\n                      onClick={handleFormSubmit(env)}\n                      block\n                    >\n                      {env.name}\n                    </Menu.Item>\n                  )\n                )\n              )}\n            </Menu>\n          </Sider>\n          <Layout>\n            <Content className=\"content\">\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/register\">\n                <Register />\n              </Route>\n              <Route exact path=\"/\">\n                <Envcard name={envelopeName} balance={envelopeBalance} />\n              </Route>\n            </Content>\n          </Layout>\n        </>\n      ) : (\n        <>\n          <p>Click Login or Register to get started.</p>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport \"../App.css\";\n\nconst styles = {};\n\nfunction Footer1() {\n  return <footer>Envelopes LLC 2021</footer>;\n}\n\nexport default Footer1;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useParams, Link } from \"react-router-dom\";\n// import { Provider } from \"react-redux\";\nimport { Layout, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport Homepage from \"./components/Homepage\";\nimport \"./Register\";\nimport Login from \"./Login\";\n\nimport Auth from \"./utils/auth\";\nimport Register from \"./Register\";\n\n\nimport Footer1 from \"./components/Footer\";\n\n\n// import Register from \"./Register\";\n// import Login from \"./Login\";\n// import SideMenu from \"./components/SideMenu\";\n\n// import Envcard from \"./components/Envcard\";\nconst { Header, Footer } = Layout;\n\nfunction App() {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        <Layout>\n          <Header className=\"header\" style={{ textAlign: \"right\" }}>\n            <Menu className=\"headerMenu\" theme=\"dark\" mode=\"horizontal\">\n              {Auth.loggedIn() ? (\n                <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                  Logout\n                </button>\n              ) : (\n                <>\n                  <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                    Login\n                  </Link>\n                  <Link className=\"btn btn-lg btn-light m-2\" to=\"/register\">\n                    Register\n                  </Link>\n                </>\n              )}\n              <div className=\"title\">\n                <h4>envelopes</h4>\n              </div>\n            </Menu>\n          </Header>\n          <Layout>\n            {/* <SideMenu /> */}\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/register\">\n                <Register />\n              </Route>\n            </Switch>\n          </Layout>\n          <Footer className=\"footer\" style={{ textAlign: \"center\" }}>\n            <Footer1 />\n          </Footer>\n        </Layout>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n// import './index.css';\n\nimport App from \"./App\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}